<!DOCTYPE HTML>
<html style="overflow: hidden;">
  <head>
    <title>PhotoCanvas</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="HTML5 Multi Touch Photo Viewer">
    <meta name="author" content="Piero Toffanin">
    <!-- Styles -->
    <link href="css/bootstrap.css" rel="stylesheet">
    <link href="css/responsive.css" rel="stylesheet">
    <link href="css/modern.css" rel="stylesheet">
    <style>
      body {
        margin: 0px;
        padding: 0px;
      }

    </style>
    <script src="kinetic-v3.10.5.min.js"></script>
    <script src="jquery-1.6.3.min.js"></script>
    <script src="magicgesture.js"></script>
    <script>
    document.addEventListener('GLALoad', onGLALoad, false);
    function onGLALoad(event) {
      GLA.SetTuioEnabled(true);
    }

    var stage;
    var serverImageList = [];

    function pool(){
      $.ajax({
        type: "GET",
        data: {"action":"getImageList"},
        dataType: 'json',
        url: "servlet",
        error: function(xhr, statusText) { },
        success: function(imageList){
          if (imageList.length == 0){
            stage.clear();
          }else if (serverImageList.length != imageList.length){
            stage.clear();
            for (var i = 0; i < imageList.length; i++){
              addImage("photo?id=" + imageList[i]);
            }

          }
          
          serverImageList = imageList;
        }
      });  
    }

    var findLayerAt = function(pageX, pageY){
          var intersections = stage.getIntersections({x:pageX, y:pageY});
          if (intersections.length > 0){
            return intersections[intersections.length - 1].getParent();
          }else{ 
            return null;
          }
    };

    window.onload = function() {
      stage = new Kinetic.Stage({
        container: "container",
        width: $(document).width() - 4,
        height: $(document).height() - 4,
      });

      pool();
      setInterval("pool();", 3000);

      MagicGesture.init(
        findLayerAt,
        function(id){
          return stage.get('#' + id)[0];
        },
        function(element){
          return element.getId();
        }
      );
    };

    function addImage(url){
      var layer = new Kinetic.Layer({id:PseudoGuid.GetNew(), alpha:0});

      var imageObj = new Image();
      imageObj.onload = function() {

        var width = this.width;
        var height = this.height;
        var ratio = width / height;
        var maxDimension = 4;
        if (width > $(window).width() / maxDimension){
          width = $(window).width() / maxDimension;
          height = width / ratio;
        }else if (height > $(window).height() / maxDimension){
          height = $(window).height() / maxDimension;
          width = height * ratio;
        }

        var kImage = new Kinetic.Image({
          x: Math.random()*(stage.getWidth() - 100),
          y: Math.random()*(stage.getHeight() - 100),
          image: imageObj,
          width: width,
          height: height,
          alpha: 1,
          offset: [width / 2, height / 2],
        });

        layer.add(kImage);
        stage.add(layer);

        layer.transitionTo({alpha:1, duration:0.5});
      };
      imageObj.src = url;
    }

//http://stackoverflow.com/questions/226689/unique-element-id-even-if-element-doesnt-have-one
var PseudoGuid = new (function() {
    this.empty = "00000000-0000-0000-0000-000000000000";
    this.GetNew = function() {
        var fourChars = function() {
                return (((1 + Math.random()) * 0x10000)|0).toString(16).substring(1).toUpperCase();
        }
        return (fourChars() + fourChars() + "-" + fourChars() + "-" + fourChars() + "-" + fourChars() + "-" + fourChars() + fourChars() + fourChars());
    };
})();

document.addEventListener("gesturestart", gestureStart, false);
document.addEventListener("gesturechange", gestureChange, false);
document.addEventListener("gestureend", gestureEnd, false);
function gestureChange(e){
    e.preventDefault();
    var layer = e._target;
    var image = layer.getChildren()[0];
    
    image.setRotationDeg(e.rotation + image.rotationOnGestureStart);
    var scale = e.scale - 1.0;
    image.setScale(image.scaleOnGestureStart + scale, image.scaleOnGestureStart + scale);
    layer.draw();
}
function gestureStart(e){
    e.preventDefault();
    var layer = e._target;
    var image = layer.getChildren()[0];

    image.rotationOnGestureStart = image.getRotationDeg();
    image.scaleOnGestureStart = image.getScale().x;
}
function gestureEnd(e){
    e.preventDefault();
    var layer = e._target;
    var image = layer.getChildren()[0];
}

document.addEventListener('touchstart', onTouchStart, false);
document.addEventListener('touchmove', onTouchMove, false);
document.addEventListener('touchend', onTouchEnd, false);

var touchLayer = {};

function onTouchStart(e){
  e.preventDefault();
  var layer = findLayerAt(e.touch.pageX, e.touch.pageY);
  if (layer){
    layer.remove();
    stage.add(layer);
    layer.dragging = true;
    layer.touchPositionOnStartDragging = [e.touch.pageX, e.touch.pageY];
    layer.positionOnStartDragging = [layer.getPosition().x, layer.getPosition().y];
    touchLayer[e.touch.identifier] = layer;
  }
}

function onTouchMove(e){
  e.preventDefault();
  var layer = touchLayer[e.touch.identifier];
  if (layer){
    if (layer.dragging){
        var dx = e.touch.pageX - layer.touchPositionOnStartDragging[0];
        var dy = e.touch.pageY - layer.touchPositionOnStartDragging[1];

       layer.setPosition(layer.positionOnStartDragging[0] + dx, layer.positionOnStartDragging[1] + dy);
       layer.draw();
    }
  }
}

function onTouchEnd(e){
  var layer = touchLayer[e.touch.identifier];
  if (layer){
    layer.dragging = false;
    delete touchLayer[e.touch.identifier];
  }
}


  </script>
  </head>
  <body>
<!--
    <div id="test" style="-webkit-transform: rotate(0deg); z-index: 600; width: 300px; height: 200px; background-color: red; position: absolute; top: 10px; left: 10px;">
      DIV 1
    </div>

    <div style="-webkit-transform: rotate(0deg); z-index: 600; width: 300px; height: 200px; background-color: green; position: absolute; top: 200px; left: 500px;">
      DIV 1
    </div>
//-->
    <div id="container"></div>
  </body>
</html>
